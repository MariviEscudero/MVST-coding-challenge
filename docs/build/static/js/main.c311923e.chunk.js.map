{"version":3,"sources":["components/UserInfo.js","components/RepoItem.js","components/RepoList.js","components/FilterByName.js","components/App.js","index.js"],"names":["UserInfo","props","className","src","data","avatar","alt","username","login","company","bio","RepoItem","dataList","reponame","description","htmlurl","language","license","name","RepoList","console","log","repoList","map","repoData","id","FilterByName","htmlFor","placeholder","value","inputValue","onChange","ev","preventDefault","handleSearchInput","currentTarget","defaultProps","inputType","require","App","useState","userData","setUserData","reposInfo","setReposInfo","searchInput","setSearchInput","useEffect","fetch","then","res","json","avatar_url","repos","repos_url","filteredRepos","dat","html_url","visibility","filteredRepo","filter","repo","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c311923e.chunk.js","sourcesContent":["import '../styles/UserInfo.scss';\r\nconst UserInfo = (props) => {\r\n  return (\r\n    <div className=\"grid\">\r\n      <article className=\"user__info\">\r\n        <img className=\"user__info--img\" src={props.data.avatar} alt=\"Avatar\" />\r\n        <h1 className=\"user__info--name\">{props.data.username}</h1>\r\n        <h2 className=\"user__info--login\">{props.data.login}</h2>\r\n        <h3 className=\"user__info--company\">{props.data.company}</h3>\r\n        <p className=\"user__info--bio\">{props.data.bio}</p>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\nexport default UserInfo;\r\n","import '../styles/RepoItem.scss';\r\nconst RepoItem = (props) => {\r\n  return (\r\n    <>\r\n      <h1 className=\"repo__list--item__name\">{props.dataList.reponame}</h1>\r\n      <p className=\"repo__list--item__desc\">{props.dataList.description}</p>\r\n      <p className=\"repo__list--item__url\">{props.dataList.htmlurl}</p>\r\n      <p className=\"repo__list--item__lang\">{props.dataList.language}</p>\r\n      <p className=\"repo__list--item__license\">{props.dataList.license.name}</p>\r\n    </>\r\n  );\r\n};\r\nexport default RepoItem;\r\n","import '../styles/RepoList.scss';\r\nimport RepoItem from './RepoItem';\r\nconst RepoList = (props) => {\r\n  console.log(props.data);\r\n  const repoList = props.data.map((repoData) => (\r\n    <li key={repoData.id} className=\"repo__list--item\">\r\n      <RepoItem dataList={repoData} />\r\n    </li>\r\n  ));\r\n  return <ul className=\"repo__list\">{repoList}</ul>;\r\n};\r\nexport default RepoList;\r\n","//import '../styles/FilterByName.scss';\r\nconst FilterByName = (props) => {\r\n  \r\n  const filterInput = (ev) => {\r\n    ev.preventDefault();\r\n    props.handleSearchInput(ev.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"main__form--label\" htmlFor={props.name}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className=\"main__form--input\"\r\n        name=\"nameinput\"\r\n        id=\"nameinput\"\r\n        placeholder=\"Find a repository...\"\r\n        value={props.inputValue}\r\n        onChange={filterInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilterByName.defaultProps = {\r\n  inputType: 'text',\r\n  require: false,\r\n};\r\n\r\nexport default FilterByName;\r\n","import { useState, useEffect } from 'react';\nimport '../styles/App.scss';\nimport UserInfo from './UserInfo';\nimport RepoList from './RepoList';\nimport FilterByName from './FilterByName';\n\nconst App = () => {\n\n  const [userData, setUserData] = useState([]);\n  const [reposInfo, setReposInfo] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n\n  useEffect(() => {\n    fetch(`https://api.github.com/users/MariviEscudero`)\n      .then((res) => res.json())\n      .then((data) => {\n        let userData = {\n          login: data.login === null ? 'Unknown' : data.login,\n          avatar: data.avatar_url === null ? 'Unknown' : data.avatar_url,\n          username: data.name === null ? 'Unknown' : data.name,\n          company: data.company === null ? 'Unknown' : data.company,\n          bio: data.bio === null ? 'Unknown' : data.bio,\n          repos: data.repos_url === null ? 'Unknown' : data.repos_url,\n        };\n        setUserData(userData);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (userData.repos) {\n      fetch(userData.repos)\n        .then((res) => res.json())\n        .then((data) => {\n          const filteredRepos = data.map((dat) => {\n            return {\n              id: dat.id,\n              reponame: dat.name === null ? 'Unknown' : dat.name,\n              htmlurl: dat.html_url === null ? 'Unknown' : dat.html_url,\n              description:\n                dat.description === null ? 'Unknown' : dat.description,\n              language: dat.language === null ? 'Unknown' : dat.language,\n              visibility: dat.visibility === null ? 'Unknown' : dat.visibility,\n              license: dat.license === null ? 'Unknown' : dat.license,\n            };\n          });\n          setReposInfo(filteredRepos);\n        });\n    }\n  }, [userData]);\n\n  //console.log(userData);\n  //console.log(reposInfo);\n\n  const handleSearchInput = (value) => {\n    setSearchInput(value);\n  };\n\n  const filteredRepo = reposInfo.filter((repo) =>\n    repo.reponame.toLocaleLowerCase().includes(searchInput.toLocaleLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <UserInfo data={userData} />\n      <FilterByName\n        handleSearchInput={handleSearchInput}\n        inputValue={searchInput}\n      />\n      <RepoList data={filteredRepo} />\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}