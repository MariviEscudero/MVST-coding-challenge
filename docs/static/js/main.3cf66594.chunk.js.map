{"version":3,"sources":["components/UserInfo.js","components/RepoItem.js","components/RepoList.js","components/SearchField.js","components/App.js","index.js"],"names":["UserInfo","props","className","src","data","avatar","alt","username","login","company","bio","RepoItem","href","dataList","htmlurl","target","rel","reponame","visibility","description","language","license","name","RepoList","repoList","map","repoData","id","length","SearchField","htmlFor","placeholder","value","inputValue","onChange","ev","preventDefault","handleSearchInput","currentTarget","defaultProps","inputType","require","App","useState","userData","setUserData","reposInfo","setReposInfo","searchInput","setSearchInput","useEffect","fetch","then","res","json","avatar_url","repos","repos_url","filteredRepos","dat","html_url","filteredRepo","filter","repo","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cf66594.chunk.js","sourcesContent":["import '../styles/UserInfo.scss';\r\n\r\n//Rendering of user information obtained by fetching the API in App.js, and defined by props\r\n\r\nconst UserInfo = (props) => {\r\n  return (\r\n    <div className=\"grid\">\r\n      <article className=\"user__info\">\r\n        <img className=\"user__info--img\" src={props.data.avatar} alt=\"Avatar\" />\r\n        <h1 className=\"user__info--name\">{props.data.username}</h1>\r\n        <h2 className=\"user__info--login\">{props.data.login}</h2>\r\n        <h3 className=\"user__info--company\">{props.data.company}</h3>\r\n        <p className=\"user__info--bio\">{props.data.bio}</p>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\nexport default UserInfo;\r\n","import '../styles/RepoItem.scss';\r\n\r\n//Rendering component whith the information obtained by fetching API and filter by name\r\n//Data obtained by props\r\n\r\nconst RepoItem = (props) => {\r\n  return (\r\n    <>\r\n      <a\r\n        className=\"repo__list--item__link\"\r\n        href={`${props.dataList.htmlurl}`}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <h1 className=\"repo__list--item__link--name\">\r\n          {props.dataList.reponame}{' '}\r\n          <span className=\"visibility_span_label\">\r\n            {props.dataList.visibility}\r\n          </span>\r\n        </h1>\r\n      </a>\r\n      <p className=\"repo__list--item__desc\">{props.dataList.description}</p>\r\n      <div className=\"repo__list--item__flex\">\r\n        <p\r\n          className={\r\n            props.dataList.language === 'Not defined'\r\n              ? 'hidden'\r\n              : 'repo__list--item__language'\r\n          }\r\n        >\r\n          <span className=\"language_span_label\"></span>\r\n          {props.dataList.language}\r\n        </p>\r\n        <p\r\n          className={\r\n            props.dataList.license.name ? 'repo__list--item__license' : 'hidden'\r\n          }\r\n        >\r\n          <span className=\"license_span_label\"></span>\r\n          {props.dataList.license.name}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default RepoItem;\r\n","import '../styles/RepoList.scss';\r\nimport RepoItem from './RepoItem';\r\n\r\n//The component render a list of li inside an ul label\r\n\r\nconst RepoList = (props) => {\r\n  const repoList = props.data.map((repoData) => (\r\n    <li key={repoData.id} className=\"repo__list--item\">\r\n      <RepoItem dataList={repoData} />\r\n    </li>\r\n  ));\r\n\r\n  //Rendering of repos list searched by the text input, with error message if repository is not found\r\n\r\n  if (repoList.length) {\r\n    return <ul className=\"repo__list\">{repoList}</ul>;\r\n  } else {\r\n    return <p className=\"repo__list\">Ups, repository not found at this page</p>;\r\n  }\r\n};\r\nexport default RepoList;\r\n","import '../styles/SearchField.scss';\r\nconst SearchField = (props) => {\r\n  //lifting the input value\r\n  const filterInput = (ev) => {\r\n    ev.preventDefault();\r\n    props.handleSearchInput(ev.currentTarget.value);\r\n  };\r\n  //rendering of the component\r\n  return (\r\n    <form className=\"main__form\">\r\n      <label className=\"main__form--label\" htmlFor={props.name}>\r\n        Repository Name\r\n      </label>\r\n      <input\r\n        className=\"main__form--input\"\r\n        name=\"nameinput\"\r\n        id=\"nameinput\"\r\n        placeholder=\"Find a repository...\"\r\n        value={props.inputValue}\r\n        onChange={filterInput}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\n//props values for constant props not defined in the component\r\n\r\nSearchField.defaultProps = {\r\n  inputType: 'text',\r\n  require: false,\r\n};\r\nexport default SearchField;\r\n","import { useState, useEffect } from 'react';\nimport '../styles/App.scss';\nimport UserInfo from './UserInfo';\nimport RepoList from './RepoList';\nimport SearchField from './SearchField';\n\nconst App = () => {\n  //Data user useState\n  const [userData, setUserData] = useState([]);\n\n  //User repos information useState\n  const [reposInfo, setReposInfo] = useState([]);\n\n  //useState of input text typing to find a repo\n  const [searchInput, setSearchInput] = useState('');\n\n  // Hook useEffect to obtain API REST user data when the app is initialized\n  //API url for a Json users list: https://api.github.com/users\n  //API url for an only user list: https://api.github.com/users/{user}\n\n  useEffect(() => {\n    fetch(`https://api.github.com/users/MariviEscudero`)\n      .then((res) => res.json())\n      .then((data) => {\n        let userData = {\n          login: data.login === null ? 'Unknown' : data.login,\n          avatar: data.avatar_url === null ? 'Unknown' : data.avatar_url,\n          username: data.name === null ? 'Unknown' : data.name,\n          company: data.company === null ? 'Unknown' : data.company,\n          bio: data.bio === null ? 'Unknown' : data.bio,\n          repos: data.repos_url === null ? 'Unknown' : data.repos_url,\n        };\n        setUserData(userData);\n      });\n  }, []);\n\n  //Hook useEffect to obtain Json of listed repositories of the user obtained before\n  //Is necessary the data.repos_url to make the consult to API, and\n  //Is necessary to start the useEffect after the previous, with }, [userData]);\n\n  useEffect(() => {\n    if (userData.repos) {\n      fetch(userData.repos)\n        .then((res) => res.json())\n        .then((data) => {\n          const filteredRepos = data.map((dat) => {\n            return {\n              id: dat.id,\n              reponame: dat.name === null ? 'Unknown' : dat.name,\n              htmlurl: dat.html_url === null ? 'Unknown' : dat.html_url,\n              description: dat.description === null ? '' : dat.description,\n              language: dat.language === null ? 'Not defined' : dat.language,\n              visibility: dat.visibility === null ? 'Unknown' : dat.visibility,\n              license: dat.license === null ? 'None' : dat.license,\n            };\n          });\n          setReposInfo(filteredRepos);\n        });\n    }\n  }, [userData]);\n\n  //This function catch input value to use it to filter by it\n\n  const handleSearchInput = (value) => {\n    setSearchInput(value);\n  };\n\n  //Filtering repo by name\n\n  const filteredRepo = reposInfo.filter((repo) =>\n    repo.reponame.toLocaleLowerCase().includes(searchInput.toLocaleLowerCase())\n  );\n\n  //Rendering of the imported App components\n\n  return (\n    <div className=\"App\">\n      <UserInfo data={userData} />\n      <SearchField\n        handleSearchInput={handleSearchInput}\n        inputValue={searchInput}\n      />\n      <RepoList data={filteredRepo} />\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}